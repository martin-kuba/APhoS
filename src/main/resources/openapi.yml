openapi: 3.0.1
info:
  title: APhoS
  description: |
    This is Amateur Photometric Survey (APhoS) Application Programming Interface.
  contact:
    name: Pavel Kinc
    email: pavelkinc230@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.5
servers:
- url: http://localhost:8009
  description: Developer server
- url: https://aphos.cerit-sc.cz/
  description: Main server APhoS
- url: https://test.aphos.cerit-sc.cz/
  description: test
tags:
- name: SpaceObject
  description: Everything about space objects by cataloque info
- name: Flux
  description: Data about a flux
- name: User
  description: User information
paths:
  /api/user/getCatalogs:
    get:
      tags:
      - Catalog
      summary: Find all catalogs
      description: Returns catalogs
      operationId: getCatalogs
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  enum:
                  - UCAC4
                  - USNO-B1.0
            application/xml:
              schema:
                type: array
                items:
                  type: string
                  enum:
                  - UCAC4
                  - USNO-B1.0
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/user/findByUsername:
    get:
      tags:
      - User
      summary: Find user by username
      description: Returns a user
      operationId: getUserByUsername
      parameters:
      - name: username
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid username supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/spaceObject/find:
    get:
      tags:
      - SpaceObject
      - Flux
      summary: Find space object by ID and catalog
      description: "Returns a space object with fluxes, maximum fluxes count is 2000"
      operationId: getSpaceObjectById
      parameters:
      - name: spaceObjectId
        in: query
        description: ID of space object to return
        required: true
        schema:
          type: string
      - name: catalog
        in: query
        description: "Catalog of space object to return \n\nDefault is UCAC4"
        required: false
        schema:
          type: string
          enum:
          - UCAC4
          - USNO-B1.0
      responses:
        "400":
          description: Invalid catalog or ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "404":
          description: Space object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flux'
  /api/spaceObject/findByParams:
    get:
      tags:
      - SpaceObject
      summary: Finds space objects by multiple data
      description: "No additional data is mandatory, but maximum object count is 100"
      operationId: findSpaceObjectsByParams
      parameters:
      - name: objectId
        in: query
        description: Find object based on it's ID in given catalog
        required: false
        schema:
          type: string
      - name: catalog
        in: query
        description: "Catalog of space object to return \n\nDefault is UCAC4"
        required: false
        schema:
          type: string
          enum:
          - UCAC4
          - USNO-B1.0
      - name: name
        in: query
        description: Find object by it's name
        required: false
        schema:
          type: string
      - name: coordinates
        in: query
        description: Filter by coordinates
        required: false
        schema:
          $ref: '#/components/schemas/Coordinates'
      - name: minMag
        in: query
        description: Find objects based on min magnitude
        required: false
        schema:
          minimum: 0.0
          type: string
          default: "0"
      - name: maxMag
        in: query
        description: Find objects based on max magnitude
        required: false
        schema:
          maximum: 15.0
          type: string
          default: "15"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpaceObject'
        "400":
          description: Invalid values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/spaceObject/comparison:
    get:
      tags:
      - SpaceObject
      - Flux
      summary: Comparison object of 2 SpaceObjects
      description: "Returns a fluxes comparison object, maximum fluxes count is 2000"
      operationId: getComparisonByIdentificators
      parameters:
      - name: originalId
        in: query
        description: ID of space object to return
        required: true
        schema:
          type: string
      - name: originalCat
        in: query
        description: Catalog of space object to return
        required: false
        schema:
          type: string
          enum:
          - UCAC4
          - USNO-B1.0
      - name: referenceId
        in: query
        description: ID of space object to return
        required: true
        schema:
          type: string
      - name: referenceCat
        in: query
        description: Catalog of space object to return
        required: false
        schema:
          type: string
          enum:
          - UCAC4
          - USNO-B1.0
      responses:
        "404":
          description: Space object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "400":
          description: Invalid catalogs or ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluxData'
components:
  schemas:
    ErrorMessage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
    User:
      type: object
      properties:
        username:
          type: string
        description:
          type: string
    Flux:
      type: object
      properties:
        rightAsc:
          type: string
        declination:
          type: string
        addedBy:
          type: string
        apAuto:
          type: number
          format: double
        apertures:
          type: array
          items:
            type: number
            format: double
        photo:
          $ref: '#/components/schemas/PhotoProperties'
    PhotoProperties:
      type: object
      properties:
        exposureBegin:
          type: string
          format: date-time
        exposureEnd:
          type: string
          format: date-time
    Coordinates:
      type: object
      properties:
        rightAsc:
          pattern: "\\d{2}:\\d{2}:\\d{2}([.]\\d+)?|^$"
          type: string
          description: Right ascension
        declination:
          pattern: "\\d{2}:\\d{2}:\\d{2}([.]\\d+)?|^$"
          type: string
          description: Declination
        radius:
          minimum: 0
          type: number
          description: Radius
          format: double
      example:
        rightAsc: 21:41:55.291
        declination: 71:18:41.12
        radius: 0.05
    SpaceObject:
      type: object
      properties:
        id:
          type: string
        catalog:
          type: string
        name:
          type: string
        rightAsc:
          type: string
        declination:
          type: string
        magnitude:
          type: number
          format: float
        fluxesCount:
          type: integer
          format: int32
    FluxData:
      type: object
      properties:
        rightAsc:
          type: string
        dec:
          type: string
        apAuto:
          type: string
        apertures:
          type: array
          items:
            type: string
        refApAuto:
          type: string
        refApertures:
          type: array
          items:
            type: string
        magnitude:
          type: number
          format: float
        deviation:
          type: number
          format: float
        username:
          type: string
        night:
          $ref: '#/components/schemas/Night'
        expMiddle:
          type: string
    Night:
      type: object
      properties:
        firstDateOfTheNight:
          type: string
        secondDateOfTheNight:
          type: string
        username:
          type: string
        idOnPage:
          type: integer
          format: int32
        apToBeUsed:
          type: string
        refApToBeUsed:
          type: string
